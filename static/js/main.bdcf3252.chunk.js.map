{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"uOAIMA,uLACS,IAAAC,EAAAC,KACX,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAAAC,GAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACVG,QAAS,kBAAMZ,EAAKE,MAAMW,WAAWR,KAFvC,WAOFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKM,2CAOrC,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBR,KAAKa,qBApB3BC,aA4BRC,cAJS,SAAAC,GACtB,MAAO,CAAEd,MAAOc,EAAMd,QAKtB,CAAEU,WCjCsB,SAAAR,GAExB,MAAO,CACLa,KAAM,gBACNC,QAASd,KD2BEW,CAGbjB,GEdaiB,cAJS,SAAAC,GACtB,MAAO,CAAEZ,KAAMY,EAAMG,eAGRJ,CAlBI,SAAAK,GAAc,IAAXhB,EAAWgB,EAAXhB,KACpB,OAAKA,EAEHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,mBACUH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFF,cAGcH,EAAKiB,WAPLhB,EAAAC,EAAAC,cAAA,4BCcLe,EAfH,WACV,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACiB,EAAD,UCQKC,cAAgB,CAC7BvB,MAlBmB,WACnB,MAAO,CACL,CAAEQ,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,qBAAsBW,SAAU,UAc3CF,aAV0B,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,MAAoB,kBAAhBC,EAAOZ,KACFY,EAAOX,QAGTC,KCPTW,IAASC,OACP1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAC3B9B,EAAAC,EAAAC,cAAC6B,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.bdcf3252.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends Component {\r\n  renderList() {\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button\r\n              className=\"ui button primary\"\r\n              onClick={() => this.props.selectSong(song)}\r\n            >\r\n              Select\r\n            </button>\r\n          </div>\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectSong }\r\n)(SongList);\r\n","//Action creator\r\nexport const selectSong = song => {\r\n  //return an action\r\n  return {\r\n    type: \"SONG_SELECTED\",\r\n    payload: song\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetail = ({ song }) => {\r\n  if (!song) return <div>select song</div>;\r\n  return (\r\n    <div>\r\n      <h3>Details for:</h3>\r\n      <p>\r\n        Title: {song.title}\r\n        <br />\r\n        Durantion: {song.duration}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst songsReducer = () => {\r\n  return [\r\n    { title: \"No Scrubs\", duration: \"4:05\" },\r\n    { title: \"Macarena\", duration: \"2:30\" },\r\n    { title: \"All Star\", duration: \"3:15\" },\r\n    { title: \"I Want it That Way\", duration: \"1:45\" }\r\n  ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songsReducer,\r\n  selectedSong: selectedSongReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}